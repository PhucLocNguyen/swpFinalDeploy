import{r as f,j as I,B as o,h as l}from"./index-VGU-9NUU.js";import{T as V}from"./TextField-BbW75Pm-.js";import{a}from"./instance-DZS3_tzi.js";import{a as p}from"./AxiosConfigHeader-CNHt4vQr.js";function T({label:s,type:e,pattern:t,inputCase:r}){const[n,c]=f.useState({isValid:!1,message:""});function d(i){if(r!=null&&r=="login")return;if(i.target.value.trim().length==0){c({isValid:!0,message:`${s} field can't be empty!`});return}if(!i.target.value.match(t)){c({isValid:!0,message:`The input must match the pattern of ${s}`});return}c({isValid:!1})}const m=(i,g)=>{let u;return(...h)=>{u&&clearTimeout(u),u=setTimeout(()=>{i(...h)},g)}},y=f.useCallback(m(d,1e3),[d]);return I.jsx(V,{sx:{my:"8px",width:"100%"},type:e,id:"outlined-basic",label:s,error:n.isValid,helperText:n.message,variant:"outlined",name:s,onChange:y})}const C=async s=>{try{var e=null;const t=await a.post("/User/loginForCustomer",s);if(t.status===200){localStorage.setItem("userInfo",JSON.stringify(t.data));const r=t.data;return e=l(r).Role,o.success("Login successful!"),{role:e}}}catch(t){return o.error("Wrong username or password"),console.error("Error during login:",t),{role:null}}},F=async s=>{try{const e=await a.post("/User/registerForCustomer",s,p);return o.info(e.data),!0}catch(e){return console.error("Error during register:",e),o.error("Register Failed: "+e.response.data),!1}},L=async s=>{var e;try{const t=await a.post("/LoginGoogle/login",{token:s});return localStorage.setItem("userInfo",JSON.stringify(t.data)),e=l(t.data).Role,o.success("Login successful!"),e}catch{return e=null,e}},S=async s=>{var t;var e=null;try{const r=await a.post("/User/loginForStaff",s);console.log(">>> API login respone: ",r);const n=r==null?void 0:r.data;return o.success("Login successful!"),localStorage.setItem("userInfo",JSON.stringify(r.data)),e=l(n).Role,console.log(">>> API login role: ",e),e}catch(r){return o.error("Failed: "+((t=r==null?void 0:r.response)==null?void 0:t.data)),null}},A=async s=>{try{const e=await a.post("/User/VerifyEmail",s,p);return o.success("Verify register successful!"),e.status}catch(e){o.error("Failed: ",e.response.data)}},E=async()=>{try{const s=await a.post("/User/ResendCode");return o.success("Resend code to verify for register successful!"),s.status}catch(s){o.error("Failed: ",s.response.data)}};export{T as I,L,F as R,A as V,C as a,S as b,E as c};
